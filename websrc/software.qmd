---
title: Installing Software
---

BEFORE YOU START, please scan all the instructions.  To many of you are jumping directly to one place and missing the other instructions.

## These are the tools to install (but wait ...)
If you want to replicate the beautiful experience of [our goal](goal.qmd), you'll want to install the following tools:

* [pyenv and python](https://github.com/pyenv-win/pyenv-win#installation)
* [poetry](https://python-poetry.org/docs/#installation)
* [quarto](https://quarto.org/docs/get-started/)
* [gh - GITHUB CLI](https://cli.github.com/)
* [git](https://github.com/git-guides/install-git)
* [visual student code](https://code.visualstudio.com/download)

Once the tools are installed and working, you'll want to:

* visit the [final steps](finalsteps.qmd) page to sync them all together, then
* visit the [VSC page](vscode.qmd) to set up visual studio code properly.
* check out the [utilities](utils.qmd) to help you examine the settings in your PATH and ENV.


## There are two approaches to installing them

1. You can install these tools manually one-by-one following links provided above and following
the instructions at each site.  Follow the instructions completely!  I've seen many of you miss/forget the final
and often most importent instruction.

&nbsp;&nbsp;**OR**

2. You can install the tools from a terminal [RECOMMENDED!]

## But wait - I already have one or more of them installed!

That's OK.  Jump to [testing your installation](#testing-your-installation) to verify that they're all running individualy, and then visit the [final steps](finalsteps.qmd) page to tie them all together.

## CAUTION WITH POETRY

*Poetry* can be installed using *pip install poetry*.  THIS IS NOT RECOMMENDED! Installing poetry this way will screw up the *poetry shell* command.  Don't do it!

I recommand that you following the instructions and install poetry without using PIP.  Your life will be MUCH easier!

## Installing packages from a terminal [recommended]

*Quarto*, *gh*, *git* and *VSC* can all be installed directly from a terminal without a bunch of mouse clicks.  *Pyenv*, *python* and *poetry* require more hand-holding.

First, let's install big packages and then pick up the others later.

All operating systems offer tools for installing software OUTSIDE the GUI from a terminal.  
This is how docker containers and virtual machines are created.

* *apt*, *yum*, *dmf* and other tools are used on linux,
* *homebrew* is used on mac, but can also run on linux, and
* *chocolatey* and *winget* are used on windows.

::: {.panel-tabset}

## Windows

**Install *chocolatey**

Open a terminal using the "Run as administrator" option.

```powershell
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine
Powershell -command Invoke-WebRequest -Uri "https://chocolatey.org/install.ps1" -OutFile $env:temp\install.ps1
powershell -executionpolicy unrestricted -command Unblock-File $env:temp\install.ps1; powershell -command $env:temp\install.ps1

```
Close the terminal and reopen again as "Run as administrator"

**Install software using *chocolatey***

```powershell
choco install quarto -y
choco install git.install -y
choco install gh -y
choco install visualstudiocode -y

```

**Test your install so far.**

Close your terminal and reopen a new regular terminal:

```powershell
quarto --version
git --version
gh --version
code --version
```

You're done installing the major block of tools.

## Mac

Software on a mac is installed automatically using *Homebrew.*

**Install *homebrew***

```zsh
# I haven't pulled separate instructions.
# visit the sites above to install the mac versions manually.
# It generally works every time!
```

**Install software using *homebrew***

```zsh
# Instructions not added yet.
```

Test your install so far

```zsh
quarto --version
git --version
gh --version
code --version
```


## Linux

Software on Ubuntu linux is installed using *apt*. It comes installed on Ubuntu so we can jump directly to the software install

Install software using *apt*

```bash
# I haven't pulled separate instructions.
# visit the sites above to install the mac versions manually.
# It generally works every time!
```

Test your install so far

```bash
quarto --version
git --version
gh --version
code --version
```


:::

## Installing pyenv and poetry

::: {.panel-tabset}

## Windows

### Install pyenv

**Paste the following command into a terminal:**

```powershell
Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1" -OutFile "./install-pyenv-win.ps1"; &"./install-pyenv-win.ps1"

```

**If you get errors, then you'll need to take a different approach.**

Close your terminal and reopen it with *Run as Administrator*, then paste the following commands:

```powershell
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine
Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1" -OutFile "./install-pyenv-win.ps1"; &"./install-pyenv-win.ps1"

```

**Close the admin terminal and reopen a regular terminal, and paste these commands:**

Set PYENV, PYENV_ROOT and PYENV_HOME User environment variables.
```powershell
[System.Environment]::SetEnvironmentVariable('PYENV',$env:USERPROFILE + "\.pyenv\pyenv-win\","User")
[System.Environment]::SetEnvironmentVariable('PYENV_ROOT',$env:USERPROFILE + "\.pyenv\pyenv-win\","User")
[System.Environment]::SetEnvironmentVariable('PYENV_HOME',$env:USERPROFILE + "\.pyenv\pyenv-win\","User")

```

**Update the user PATH**

```powershell
[System.Environment]::SetEnvironmentVariable('path', $env:USERPROFILE + "\.pyenv\pyenv-win\bin;" + $env:USERPROFILE + "\.pyenv\pyenv-win\shims;" + [System.Environment]::GetEnvironmentVariable('path', "User"),"User")

```

**Test your install.  Close the window and reopen a regular terminal:**

```powershell
pyenv --version
pyenv update
pyenv install 3.11.6
pyenv global 3.11.6
python --version

```

### Install poetry

Poetry should be installed using these instructions ... NOT using *pip install poetry*.  Before installing this, 
run the command below to ensure that poetry is cleaned out of your python.

```powershell
pip uninstall poetry

```

**Verify that you have pyenv and python running before you install poetry.**

```powershell
pyenv --version
python --version

```

**Now install Poetry**

```powershell
(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -

```

**Then, add poetry to your User PATH.**

```powershell
[System.Environment]::SetEnvironmentVariable('path', $ENV:APPDATA + "\Python\Scripts;" + [System.Environment]::GetEnvironmentVariable('path', "User"),"User")

```

**Test your install.  Close the window and reopen a regular terminal**

```powershell
poetry --version

```

**Finish the Quarto install**

Quarto was installed above, but still needs to be properly connected to python.

This code is for testing.  However, it won't stick.  You need to visit [final steps](finalsteps.qmd) to create a more permanent fix.

```powershell
$ENV:QUARTO_PYTHON=$(pyenv which python)
pip install jupyter matplotlib plotly
quarto check
```

## Mac

```zsh
pip install jupyter matplotlib plotly
quarto check
```

## Linux

```bash
pip install jupyter matplotlib plotly
quarto check
```

:::

## Testing your installation

At this point your should be able to run these commands from ANY OS:

```powershell
pyenv --version
pyenv global 3.11.6
python --version
poetry --version
gh --version
git --version
code --version
quarto check
```

Verify that the python version displayed by *quarto check* matches the python version you installed (3.11.6)

Now you can jump ahead to [final steps](finalsteps.qmd) to close the deal!

## Troubleshooting

If you're having trouble with one or more of the tools, try reinstalling and verify that you're performing
ALL the steps described in the installation.

If nothing is working, you can try uninstalling the tools and starting over.

If these tools aren't working, then you'll not be able to replicate the [beautiful experience of our goal](goal.qmd).

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
